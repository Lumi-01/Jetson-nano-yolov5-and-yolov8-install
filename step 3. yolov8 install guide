#open terminal

# Create virtualenv - Specify Python 3.8
$ python3 -m virtualenv yolov8-py38 --python=python3.8

# Activate virtual environment
$ source yolov8-py38/bin/activate

# Upgrade pip and build tools to the latest version
$ pip3 install --upgrade pip setuptools wheel

# Install Cython and numpy
$ pip3 install 'Cython<3.0'
$ pip3 install numpy==1.19.2

# Download and Install PyTorch v1.11.0 for Python 3.8
# https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048
# This .whl file is specifically pre-built for Jetson devices (aarch64 architecture).
$ wget https://nvidia.box.com/shared/static/ssf2v7pf5i245fk4i0q926hy4imzs2ph.whl -O torch-1.11.0-cp38-cp38-linux_aarch64.whl
$ pip3 install numpy torch-1.11.0-cp38-cp38-linux_aarch64.whl

# Install system dependencies required for building torchvision (e.g., JPEG and ZLib support).
$ sudo apt-get install -y libjpeg-dev zlib1g-dev

# Clone >the specific v0.12.0 branch of the torchvision repository from GitHub.
# The files are placed in a new directory named 'torchvision_v0.12.0' in the home folder (~).
$ git clone --branch v0.12.0 https://github.com/pytorch/vision ~/torchvision_v0.12.0

# Navigate into the newly created torchvision directory.
$ cd ~/torchvision_v0.12.0

# Set the environment variable to ensure the correct version number (0.11.1) is used during the build process.
$ export BUILD_VERSION=0.12.0

# Compile and install torchvision from the source code.
# WARNING: This process takes significant time (often 30+ minutes) on Jetson Nano devices.
$ python3 setup.py install

# Return to the user's home directory for the next steps.
$ cd ~

# Install yolov8
pip install ultralytics==8.0.232
yolo predict model=yolov8n.pt source=0
